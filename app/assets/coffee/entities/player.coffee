define ["app", "apps/config/storage/localstorage", "entities/feed"], (Swabcast) ->
  # Generated by CoffeeScript 1.6.3
  Swabcast.module "Entities", (Entities, Swabcast, Backbone, Marionette, $, _) ->
    API = undefined
    initializePlayerDataSyncData = undefined
    Entities.PlayerData = Entities.Episode.extend(urlRoot: "player")
    Entities.configureStorage Entities.PlayerData

    Entities.PlayerDataStore = Backbone.Collection.extend(
      model: Entities.Episode
      url: "player"
    )
    Entities.configureStorage Entities.PlayerDataStore

    initializePlayerData = ->
      syncData = undefined
      syncData = new Entities.PlayerData(
        title: ""
        mediaUrl: ""
        albumArt: ""
        currentPosition: 0
      )
      syncData.save()

    API =
      getPlayerData: ->
        defer = undefined
        playerSaveData = undefined
        promise = undefined
        playerSaveData = new Entities.PlayerData(id: 0)
        defer = $.Deferred()
        playerSaveData.fetch
          success: (data) ->
            defer.resolve data

          error: ->
            defer.resolve `undefined`

        promise = defer.promise()
        defer.promise()

      playerReset: ->
        playerSaveData = undefined
        playerSaveData = new Entities.PlayerData(id: 0)
        console.log "playerdata:reset triggered"

    Swabcast.reqres.setHandler "player:savedata", ->
      console.log("player:savedata")
      API.getPlayer()

    Swabcast.commands.setHandler "playerdata:remove", ->
      console.log("playerdata:remove")
      API.playerReset()

    Swabcast.commands.setHandler "playerdata:add", (episodeModel) ->
      console.log("playerdata:add, (episodeModel)", episodeModel)
      API.updateSaveData episodeModel

  return
